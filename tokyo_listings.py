# -*- coding: utf-8 -*-
"""Tokyo_listings

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KYFGZrKHrMhIp_ak3ZcErXUL2NOxWITN
"""

import pandas as pd
import numpy as np

tokyo_listings_df =pd.read_csv('listings.csv', na_values='')
tokyo_listings_df

tokyo_listings_df.columns

tokyo_listings_df.shape

tokyo_listings_df.info()

"""#Data Cleaning

"""

#neighbourhood_group has no values; it can be removed

tokyo_listings_df.drop('neighbourhood_group', axis=1,inplace=True)

tokyo_listings_df #There is no neighbourhood_group

tokyo_listings_df.info()

#There are some attributes which contains null values; replace with 0 or mean

tokyo_listings_df.describe()

clean_tokyo_listings_df = tokyo_listings_df.fillna({'last_review':0,'license':0,'host_name':0,'reviews_per_month':0}, inplace=False)


clean_tokyo_listings_df.isnull().sum()

#For data exploration, we can drop the unuseful columns 
#correlation between price, min nights, room_type,neighbourhood,number_of_reviews, reviwews per month, availability 365 ; the other columns can be removed except id,host_id,lat and long

clean_tokyo_listings_df

clean_tokyo_listings_df['room_type'].unique()

import seaborn as sns
import matplotlib.pyplot as plt

room_type_pop =clean_tokyo_listings_df['room_type'].value_counts()     #popularity of types of room
clean_tokyo_listings_df['room_type'].value_counts().index

plt.figure(figsize=(12,12))
plt.pie(room_type_pop, labels=room_type_pop,autopct = '%1.1f%%', startangle=90)       #autopic show percentage; 1 one decimal
plt.legend(clean_tokyo_listings_df['room_type'].value_counts().index,title='Room Category')
plt.title('Room Popularity')

neighbour_pop =clean_tokyo_listings_df['neighbourhood'].value_counts()[clean_tokyo_listings_df['neighbourhood'].value_counts()>100]
#filter neighbourhoods with at least 100 activities

neighbour_pop.count()
neighbour_pop.index

plt.figure(figsize=(20,12))
plt.bar(neighbour_pop, height=neighbour_pop, width=15) 
plt.legend(neighbour_pop.index, title= 'Neighbourhood')
plt.title('Neighbourhood Popularity')

